# Docker Compose file for SonarQube and PostgreSQL
#
# This file sets up two services:
# 1. sonarqube: The SonarQube application server.
# 2. postgres: The PostgreSQL database for SonarQube.
#
# To run this file, save it as 'docker-compose.yml' and execute 'docker-compose up -d'
# in the same directory.

version: "3.8"

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine # Using PostgreSQL version 15. Check SonarQube documentation for supported versions.
    container_name: sonarqube_postgres
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - postgresql_data:/var/lib/postgresql/data # Persist database data
    networks:
      - sonarnet
    restart: unless-stopped

  # SonarQube Application Service
  sonarqube:
    image: sonarqube:lts-community # Latest Long-Term Support community edition
    container_name: sonarqube_server
    depends_on:
      - postgres # Ensures postgres starts before sonarqube
    ports:
      - "9000:9000" # Expose SonarQube web UI
      - "9092:9092" # Expose SonarQube server for internal communication
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf # Persist SonarQube configuration
      - sonarqube_data:/opt/sonarqube/data # Persist SonarQube data
      - sonarqube_extensions:/opt/sonarqube/extensions # Persist SonarQube plugins
      - sonarqube_logs:/opt/sonarqube/logs # Persist SonarQube logs
    networks:
      - sonarnet
    restart: unless-stopped

networks:
  sonarnet:
    driver: bridge

volumes:
  postgresql_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
