apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-spring-app-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.podAppLabel }} # the deployment selects pods labeled with this label
  template:
    metadata:
      labels:
        app: {{ .Values.podAppLabel }}
    spec:
      containers:
        - name: my-spring-app-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          envFrom:
            - configMapRef:
                name: my-spring-app-config # Injects all key-value pairs from our ConfigMap
          env:
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-root-password
          # Updated health checks for Spring Boot
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60  # Give Spring Boot time to start up
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
          # Resource limits ensure fair resource sharing
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"